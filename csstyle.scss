// csstyle v1.3.1 for sass
// Clean, Simple Styling for the Web
// http://www.csstyle.io
// Copyright (c) 2014 Dave Geddes
// https://twitter.com/geddski
// https://github.com/geddski

$csstyle-option-symbol: '\--' !default;
$csstyle-part-symbol: '__' !default;
$csstyle-tweak-symbol: '\+' !default;
$csstyle-location-symbol: '\@' !default;
$csstyle-root-id: 'csstyle' !default;

// components
@mixin component($name){
  .#{$name}{
    @content
  }
}

// options
// override components
@mixin option($name){
  &.#{$csstyle-option-symbol}#{$name}{
    @content;
  }
}

// allow parts to respond to options on parents
@mixin whenComponentOption($option){
  $index: str-index(#{&}, $csstyle-part-symbol) - 1;
  $component: str-slice(#{&}, 0, $index);

  #{$component}.#{$csstyle-option-symbol}#{$option} & {
    @content;
  }
}

// parts
// make up the structure of a component
// override components
@mixin part($name){
    // check if nested in an option
    $optionIndex: str-index(#{&}, ".${csstyle-option-symbol}");
    $optionIndex: 0 !default;
    $optionIndex: $optionIndex - 1;

    // check if nested in another part
    $partIndex: str-index(#{&}, $csstyle-part-symbol);
    $partIndex: 0 !default;
    $partIndex: $partIndex - 1;

    $component: str-slice(#{&}, 0, $optionIndex);
    
    // part is nested in an option
    @if $optionIndex > 0 {
      // part is also nested in another part
      @if ($partIndex > 0){
        &#{$csstyle-part-symbol}#{$name}{
          @content;
        }
      }
      @else{
        & #{$component}#{$csstyle-part-symbol}#{$name}{
          @content;
        }
      }
    }
    @else {
      &#{$csstyle-part-symbol}#{$name}{
        @content
      }
    }
}

// tweaks
// override components, options, and modifiers
@mixin tweak($name){
  ##{$csstyle-root-id} .#{$csstyle-tweak-symbol}#{$name}{
    @content;
  }
}

// locations
// override components, parts, options, and tweaks
@mixin location($name){
  ##{$csstyle-root-id} .#{$csstyle-location-symbol}#{$name}{
    @content;
  }
}
