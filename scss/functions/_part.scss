@function part($name) {
  @return escape-symbols($csstyle-part-symbol + $name, true);
}

@function _csstyle_start_part($parts) {
  $current: last($_csstyle_rules);
  
  @if length(map-get($current, 'component')) == 0 and length(map-get($current, 'tweak')) == 0 {
    @warn 'Parts can only be nested inside tweaks';
  }
  
  @if length(map-get($current, 'options')) > 0 {
    $new: (
      'parent': map-get($current, 'parent'),
      'location': (),
      'tweak': map-get($current, 'tweak'),
      'component': map-get($current, 'component'),
      'parts': map-get($current, 'parts'),
      'options': (),
    );
    
    $current: $new;
    $_csstyle_rules: append($_csstyle_rules, $new) !global;
  }
  
  $current_parts: map-get($current, 'parts');
  
  $parts: append($current_parts, $parts);
  $current: map-merge($current, ('parts': $parts));
  
  $_csstyle_rules: set-nth($_csstyle_rules, length($_csstyle_rules), $current) !global;
  
  @return $_csstyle_rules;
}

@function _csstyle_stop_part() {
  $current: last($_csstyle_rules);
  
  @if length(map-get($current, 'component')) == 0 and length(map-get($current, 'tweak')) == 0 {
    @return $_csstyle_rules;
  }
  
  $parts: map-get($current, 'parts');
  $options: map-get($current, 'options');
  
  $parts: remove-nth($parts, length($parts));
  $current: map-merge($current, ('parts': $parts));
  
  @if length($_csstyle_rules) > 1 {
    $prev: nth($_csstyle_rules, length($_csstyle_rules) - 1);
    
    @if map-get($prev, 'parts') == map-get($current, 'parts') {
      @if (length(map-get($current, 'tweak')) > 0) and (map-get($prev, 'tweak') == map-get($current, 'tweak')) or (length(map-get($current, 'component')) > 0) and (map-get($prev, 'component') == map-get($current, 'component')) {
        $_csstyle_rules: remove-nth($_csstyle_rules, length($_csstyle_rules)) !global;
        
        @return $_csstyle_rules;
      }
    }
  }
  
  $_csstyle_rules: set-nth($_csstyle_rules, length($_csstyle_rules), $current) !global;
  
  @return $_csstyle_rules;
}
