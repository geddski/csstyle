// csstyle v2.0.0-dev for sass
// Clean, Simple Styling for the Web
// http://www.csstyle.io
// Copyright (c) 2016 Dave Geddes & Sven Wittevrongel
// https://twitter.com/geddski
// https://github.com/geddski
// https://twitter.com/CupOfTea696
// https://github.com/CupOfTea696
// Example & test: TODO

/*!
 * csstyle v2.0.0-dev for sass (http://www.csstyle.io)
 * Copyright (c) 2014-2016 Dave Geddes & Sven Wittevrongel
 * Licensed under MIT (https://github.com/geddski/csstyle/blob/master/LICENSE)
 */

@import "functions/helpers";
@import "functions/csstyle";

$csstyle-component-symbol: '' !default;
$csstyle-option-symbol: '--' !default;
$csstyle-part-symbol: '/' !default;
$csstyle-tweak-symbol: '+' !default;
$csstyle-location-symbol: '@' !default;
$csstyle-root-id: 'app' !default;

$_csstyle_rules: ();

// Reset
@mixin reset-csstyle() {
  $csstyle-component-symbol: '' !global;
  $csstyle-option-symbol: '--' !global;
  $csstyle-part-symbol: '/' !global;
  $csstyle-tweak-symbol: '+' !global;
  $csstyle-location-symbol: '@' !global;
  $csstyle-root-id: 'app' !global;
}

// components
@import "functions/component";

@mixin component($names...){
  $parent: _csstyle_compile();
  $current: $_csstyle_rules;
  
  $c: _csstyle_start_component($names);
  
  @if (& != null) and (selector-parse($parent) != selector-parse(&)) {
    #{_csstyle_compile_rule(last($_csstyle_rules))} {
      @content;
    }
  } @else {
    @at-root {
      #{_csstyle_compile()} {
        @content;
      }
    }
  }
  
  $c: _csstyle_stop_component();
}

// options
// override components and parts
@import "functions/option";

@mixin option($names...){
  $parent: _csstyle_compile();
  $o: _csstyle_start_option($names);
  
  @if (& != null) and (selector-parse($parent) != selector-parse(&)) {
    @at-root {
      #{_csstyle_apply_options(&)} {
        @content;
      }
    }
  } @else {
    @at-root {
      #{_csstyle_compile()} {
        @content;
      }
    }
  }
  
  $o: _csstyle_stop_option();
}

// parts
// make up the structure of a component
// override components
@import "functions/part";

@mixin part($names...){
  $current: last($_csstyle_rules));
  
  @if map-get($current, 'component') == null {
    @warn 'Parts can only be nested inside tweaks';
  } @else {
    $parent: _csstyle_compile();
    $p: _csstyle_start_part($names);
    
    @if (& != null) and (selector-parse($parent) != selector-parse(&)) {
      #{_csstyle_compile_rule(last($_csstyle_rules))} {
        @content;
      }
    } @else {
      @at-root {
        #{_csstyle_compile()} {
          @content;
        }
      }
    }
    
    $p: _csstyle_stop_part();
  }
}

// tweaks
// override components, options, and parts
@import "functions/tweak";

@mixin tweak($names...){
  $parent: _csstyle_compile();
  $t: _csstyle_start_tweak($names);
  
  @if (& != null) and (selector-parse($parent) != selector-parse(&)) {
    #{_csstyle_compile_rule(last($_csstyle_rules))} {
      @content;
    }
  } @else {
    @at-root {
      #{_csstyle_compile()} {
        @content;
      }
    }
  }
  
  $t: _csstyle_stop_tweak();
}

// locations
// override components, parts, options, and tweaks
@import "functions/location";

@mixin location($names...){
  $l: _csstyle_start_location($names);
  
  @at-root {
    #{_csstyle_compile()} {
      @content;
    }
  }
  
  $l: _csstyle_stop_location();
}
